services:
  consumer:
    container_name: items-management-consumer
    build:
      context: ../
      dockerfile: ./build/consumer/Dockerfile
    depends_on:
      - database
      - redis
      - rabbitmq
    environment:
      - AIR_WATCH=true
    networks:
      - application-network
    volumes:
      - ../:/app

  api:
    container_name: items-management-api
    build:
      context: ../
      dockerfile: ./build/api/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - database
      - redis
      - rabbitmq
    environment:
      - AIR_WATCH=true
    networks:
      - application-network
    volumes:
      - ../:/app

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - application-network

  database:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - database-volume:/var/lib/postgresql/data
    networks:
      - application-network

  redis:
    image: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - application-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - application-network
    ports:
      - "5050:80"
    depends_on:
      - database

volumes:
  database-volume:
  phpadmin-volume:
networks:
  application-network: